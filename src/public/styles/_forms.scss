$padding-input: calc(.575em - 1px) calc(.825em - 1px);
.field {
  &:not(:last-child) {
    margin-bottom: 0.75rem;
  }
  &.is-horizontal {
    display: flex;
    justify-content: center;

    .field-label {
      padding-top: .5rem;
    }

    label {
      margin: 0;
    }
  }
  &-label {
    margin-right: 1em;
    flex-basis: 0;
    flex-grow: 1;
    flex-shrink: 0;
  }
  &-body {
    display: flex;
    flex-basis: 0;
    flex-grow: 4;
    flex-shrink: 1;

    > .field {
      flex-grow: 1;

      &:not(:last-child) {
        margin-right: 0.75em;
        margin-bottom: 0;
      }
    }
  }
}
.label {
  font-weight: 700;
  margin-bottom: .5rem;
  font-size: 1rem;
  display: block;
}
.control {
  box-sizing: border-box;
  font-size: 1rem;
  position: relative;
  text-align: left;
  .input {
    background: $color-white;
    border: 1px solid $color-gray-light;
    box-sizing: border-box;
    border-radius: 4px;
    font-size: 1rem;
    height: 2.85em;
    padding: $padding-input;
    width: 100%;
    @include placeholder {
      color: $color-gray;
    }
    &:focus {
      border-color: $color-primary;
    }
    &.is-danger {
      border-color: $color-red;
    }
  }

  &.has-icon-left, &.has-icon-right {
    .input:focus ~ .icon path {
      fill: $color-black-lighter;
    }

    .icon {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      height: 2.85em;
      pointer-events: none;
      position: absolute;
      top: 0;
      width: 2.25em;
      z-index: 0;

      &.has-pointer {
        pointer-events: unset;
        cursor: pointer;
        @include transform(scale(1));
      }
    }

    path {
      color: $color-gray;
    }
  }

  &.has-icon-left {
    .input {
      padding-left: calc(2.5em - 1px);
    }

    .icon.is-left {
      left: 0;
    }
  }

  &.has-icon-right {
    .input {
      padding-right: calc(2.5em - 1px);
    }

    .icon.is-right {
      right: 0;
    }
  }
}

.help {
  display: block;
  font-size: .75rem;
  margin: .4rem 0 0;
  &.is-danger {
    color: $color-red;
  }
}

.radio {
  input[type="radio"] {
    position: absolute;
    left: -9999px;

    &:not(:checked) + .radio-label:after {
      opacity: 0;
      @include transform(scale(0));
    }

    &:checked + .radio-label:after {
      opacity: 1;
      @include transform(scale(1));
    }

    &:disabled + .radio-label {
      cursor: not-allowed;
    }

    &:disabled:checked + .radio-label {
      cursor: not-allowed;
      &:after {
        opacity: 1;
        background-color: $color-gray;
      }
    }

    & + .radio-label {
      position: relative;
      padding-left: 1.5em;
      cursor: pointer;
      line-height: 20px;
      display: inline-block;

      &::before {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        width: 1.125em;
        height: 1.125em;
        border: 1px solid $color-gray;
        border-radius: 100%;
        background: $color-white;
      }

      &:after {
        content: '';
        width: .75em;
        height: .75em;
        background: $color-primary;
        position: absolute;
        top: .25em;
        left: .25em;
        border-radius: 100%;
        @include transition(all 0.2s ease);
      }
    }
  }

  &.is-selectable {
    position: absolute;
    top: 0;
    right: 3px;
  }
}

.radio-button-group {
  display: flex;
  flex-direction: row;
  height: $input-padding-left * 3;
  align-items: center;

  .radio:not(:first-child) {
    margin-left: 10px;
  }

  input[type="radio"] {
    &:checked + label {
      background-color: $color-text-secondary;
      color: $color-white;
    }
  }

  label {
    cursor: pointer;
    background-color: #F2F2F2;
    padding: $padding-input;
    border-radius: 5px;
  }
}

// checkbox

.checkbox {
  label {
    display: inline-block;
    position: relative;
    cursor: pointer;
    top: 2px;

    &::before {
      outline: none !important;
      //position: absolute;
      //left: -1.5rem;
      display: inline-block;
      width: 1em;
      height: 1em;
      pointer-events: none;
      content: "";
      background-color: $color-white;
      border: 1px solid $color-gray;
      border-radius: .25em;
      @include transition(0.3s ease-in-out);
    }
    &::after {
      position: absolute;
      top: .06em;
      left: .08em;
      //left: -1.45rem;
      display: block;
      width: 1em;
      height: 1em;
      content: "";
      background: no-repeat 50%/50% 50%;
    }

    &.checkbox-label {
      padding-left: 1.8em;
      display: inline-block;

      &:before {
        position: absolute;
        top: -1px;
        left: 0;
      }

      &:after {
        top: .08em;
        left: .08em;
      }
    }
  }

  input[type="checkbox"] {
    cursor: pointer;
    opacity: 0;
    z-index: 1;
    outline: none !important;
    width: 0;

    &:disabled + label {
      cursor: not-allowed;
    }
  }

  input[type="checkbox"]:checked + label {
    &::before {
      background-color: $color-primary;
      border-color: $color-primary;
    }
    &::after {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e");
    }
  }
}

.checkbox.is-circle {
  label {
    &::before {
      border-radius: 50%;
    }
  }
}

.checkbox-primary {
  input[type="checkbox"]:checked + label {
    &::before {
      background-color: $color-primary;
      border-color: $color-primary;
    }
    &::after {
      color: $color-white;
    }
  }
}

.checkbox-has-group-button {
  display: flex;
  flex-wrap: wrap;

  .checkbox {
    margin-bottom: 5px;
  }

  .checkbox:not(:first-child) {
    margin-left: 10px;
  }

  input[type="checkbox"] {
    position: absolute;
    left: -9999px;

    &:checked + label {
      background-color: $color-text-secondary;
      color: $color-white;
      border-color: $color-text-secondary;
    }
  }

  label {
    padding: 0.6rem 1rem;
    border: 1px solid $color-gray;
    font-size: 1em;
    background-color: $color-white;
    color: $color-text-secondary;
    border-radius: 5px;

    &:before, &:after {
      width: 0;
      height: 0;
      border: none;
      background-color: transparent;
    }
  }
}

.file {
  align-items: stretch;
  display: flex;
  justify-content: flex-start;
  position: relative;

  &-input {
    position: absolute;
    opacity: 0;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    &:hover {
      cursor: pointer;
    }
  }

  &-label {
    align-items: stretch;
    display: flex;
    cursor: pointer;
    justify-content: flex-start;
    overflow: hidden;
    position: relative;
    padding: 0;
  }

  &-cta {
    border-color: #BDBDBD;
    background-color: #A3ACB8;
    border-radius: 4px;
    font-size: 1em;
    white-space: nowrap;
    padding: 0.75em 1em;

    &:hover {
      background-color: #eee;
    }
  }

  &-name {
    border-radius: 0 7px 7px 0;
    padding: $input-padding-left;
  }

  &.is-dark &-cta {
    background-color: #4F566B;
    color: #FFFFFF;
  }
}

//.form-group {
//  display: flex;
//  flex-direction: column;
//}
//.input-group {
//  margin-bottom: 20px;
//  @include breakpoint(mobile) {
//    margin-bottom: 10px;
//  }
//}
//label {
//  font-weight: bold;
//  margin-bottom: 7px;
//}
//input:disabled {
//  background-color: $color-gray-lighter-2;
//}
//.form-control {
//  width: calc(100% - 3 * #{$input-padding-left});
//  border-radius: 7px;
//  border: 1px solid #AAAAAA;
//  padding: $input-padding-left;
//  color: $color-gray;
//  @include placeholder {
//    color: $color_gray;
//  }
//  &:focus {
//    outline: 0;
//    color: $color-gray;
//    background-color: $color-white;
//    border: 1px solid $color-blue;
//    @include placeholder {
//      color: $color-gray_light;
//    }
//  }
//  &.is-danger {
//    border-color: $color-red-light;
//    @include transition(all 0.30s ease-in-out);
//  }
//  &.is-large {
//    padding: $input-padding-left * 1.3;
//  }
//  &.is-disabled {
//    background-color: $color-gray-lighter-2;
//  }
//}
////.has-float-label {
////  display: block;
////  potion: relative;
////  label {
////    position: absolute;
////    left: 0;
////    top: 0;
////    cursor: text;
////    font-size: 75%;
////    opacity: 1;
////    @include transition(all .2s);
////    top: -.5em;
////    left: 0.75rem;
////    z-index: 3;
////    line-height: 1;
////    padding: 0 1px;
////    @include breakpoint(mobile) {
////      top: -.4em
////    }
////    &:after {
////      content: " ";
////      display: block;
////      position: absolute;
////      background: #F6F6F8;
////      height: 2px;
////      top: 50%;
////      left: -.2em;
////      right: -.2em;
////      z-index: -1;
////      @include breakpoint(mobile) {
////        top: 40%;
////        height: 3px;
////      }
////    }
////  }
////  .form-control:placeholder-shown:not(:focus) + * {
////    font-size: 14px;
////    font-family: $font-medium;
////    opacity: 1;
////    top: .9em;
////  }
////}
//.none-label {
//  .form-control {
//    @include placeholder {
//      color: $color_gray;
//      font-family: $font-medium;
//    }
//    &:focus {
//      @include placeholder {
//        color: $color-gray_light;
//        font-family: $font-primary;
//      }
//    }
//  }
//}
//.form-horizontal {
//  .form-group {
//    display: grid;
//    grid-template-columns: .5fr 1fr;
//    margin-bottom: 20px;
//    align-items: center;
//    .input-group {
//      margin: 0;
//    }
//    .form-control {
//      width: 95%;
//    }
//  }
//}
